

@1

---

# Introduction to Wi-Fi Penetration Testing Course

Hello, everyone! How are you all doing?

Well, for you who are watching us, for you who are already a student or who are in doubt, let's make here a brief introduction to the Wi-Fi network invasion courses with Kali Linux, a Wi-Fi pentest.

I won't extend too much, I am the instructor of this new course of ours.

Let's talk here quickly about an introduction to what a penetration test on Wi-Fi networks is.

So, this is a very common and very useful question.

Basically, penetration testing on wireless networks is an approach to evaluate the security of Wi-Fi networks.

So, this involves employing tactics and techniques that malicious hackers (ethical hackers, as we say) can employ to exploit vulnerabilities in your wireless infrastructure.

So, the goal is to identify weaknesses in your network's defenses and correct them before some intruder can actually exploit them.

So, our test includes testing Wi-Fi networks, Bluetooth devices, wireless access points, wireless devices like tablets and mice, among other things.

So, these devices are important targets, because the hacker actually has access to our Wi-Fi network and doesn't require any type of social engineering.

So, they have physical access, direct access to your Wi-Fi network.

So, then they can have much better, much more precise physical proximity, and thus really manage to invade or try to do some type of invasion or some type of manipulation technique on your Wi-Fi network.

So, this type of vulnerability can vary, such as, for example, weak passwords, poorly configured devices or devices configured incorrectly, some type of outdated firmware detection.

So, all of this can contribute to our pentest, all these factors contribute to our Wi-Fi network invasion.

## Why test a wireless network?

So, this happens because wireless networks, wireless connections can be compromised. The wireless network can be accessed from a distance, that is, anyone can be having access to the wireless network if you really don't know who it is.

So, unauthorized users, malicious users can really exploit this type of environment.

So, we can reveal some type of weakness that can hide in a wireless network, as I already mentioned, incorrect security configurations or some type of known vulnerability.

Generally, for example, this is very important because it can be easily exploited if not discovered, so we have a certain concern.

So, these factors really leave your wireless networks very unprotected, and this brings serious risks to your network.

Such as, for example, we can have some type of vulnerability that we can discover quickly and strengthen security measures.

So, you can quickly update, mainly regarding firmware. Our encryption protocol has really been improving more and more, our encryption is getting stronger and stronger.

So, this is very good.

## Regulatory Compliance

Regulatory compliance - so, we have here specific security recommendations that must be followed.

This is because many companies go through a certain type of audit, so everything has to be just right.

So that penetration tests help verify if it's really in compliance with these guidelines, to avoid fines and things like that, or even data breaches.

Also, you can protect your company's reputation. So, by performing penetration tests, you demonstrate commitment, mainly to data security.

In addition to cost savings - for example, if you have some type of data breach, this will bring legal problems, compensations, commercial losses, among other things. All of this has to be taken into account, okay?

And Wi-Fi networks are increasingly being used, so wireless networks are increasingly being utilized.

So, it really is a very important environment to be tested, to be verified to be able to see if everything is as right as possible here in our Wi-Fi networks.

## Course Content

Well, so, these courses will show the step-by-step of how attacks work, the main attacks, how an intruder does it, how we can, for example, in addition to invading a Wi-Fi network, what we can do when an intruder really enters a Wi-Fi network.

All of this is very important, okay?

So, I hope you enjoy our course. For you there, it will be increasingly valuable and important knowledge.

So, any doubt or question you have, you can contact the school, and we'll try to respond as quickly as possible.

So, that's it, see you later!

---

@2

# VirtualBox Installation on Windows

Hello everyone! How are you all doing?

Well, another very important lesson. We're going to install VirtualBox on our Windows machine.

VirtualBox is the best system for us to emulate our virtual machines. We have other virtual machines, but don't use them, ok? Use VirtualBox, alright?

So it's a free program that you can download and use. It's cross-platform, so it works for both Linux and Mac, ok?

## VirtualBox Download

So we have here our **VirtualBox.org** website. I'll provide you with the link for you to download, ok? I'll leave the link for you to access.

Let's see here how to download our little program. Click on **Download**. There it is: VirtualBox for platform. We have for Windows, macOS, we have for Linux, we have for Solaris, ok?

Let's download here our program for Windows, alright? It's an executable file. Here we're going to download, ok?

## Installation

Here you just double-click on it and it will execute, ok? I'm here using a Windows Server, ok? But it works for Windows desktop too: Windows 10, 11, 12 and so on, ok? The important thing is that it works regardless of the version you're going to use.

So let's do our installation. It's the famous "Next, Next, Next", ok? Just accept the terms and licenses, it will install our program here.

Click **Next**, click **Yes** when it appears about connection. It will ask here about **Create Shortcuts**. You can create them too and do our installation here.

So our VirtualBox doesn't take long, ok? It's also not very heavy, alright?

And there we go! Our VirtualBox installation is done. Click **Finish** and it will open our VirtualBox here, ok?

## VirtualBox Interface

A little window like this appears. Then you can see here: click **New** to create a new machine, right? In case you want to. I'll use this in the next lesson, regardless of the type of system you're going to use, ok?

Here we have the name, the virtual machine folder where it will be stored. So your entire operating system will be a file, in summary: the image that you'll have to download.

### What is an image?

The image is the image of your operating system. They all have one: Windows has an image, Linux has an image, which is the image of the entire operating system, practically, ok?

Then we have here the system types: Windows, Linux, anyway, the type of operating system you're going to choose, ok?

If it's Linux, for example, what type of Linux it is: if it's a Debian, an Ubuntu, a Red Hat (which would also be a CentOS), a Kali Linux, an Ubuntu, ok? So all of this depends on what you're going to use, alright, folks?

## VirtualBox Extension Pack

And no less important - let me emphasize here - we also have to download the **VirtualBox Extension Pack**. This is also important to download, ok?

These are extra extensions to improve your VirtualBox compatibility, right? For you to use USB, for you to use cameras, for you to use some type of important extension. So this is also important.

Come here and download it. It's a single program, ok? This Extension Pack program, it works for all systems, because it will be opened or executed by VirtualBox, ok?

### Extension Pack Installation

So I downloaded it here. If you double-click on it, it will be executed by VirtualBox, ok? It will open through VirtualBox. Then you come here and click **Install**.

Then you accept the terms here, which are our contract, right? **I agree**. And there we go! Our Extension Pack is already installed here, ok? This is important, alright?

## Conclusion

So our Oracle VirtualBox is ready for us to use, ok?

I'm going to use VirtualBox on my Linux, ok? On my Ubuntu Linux. No problem, the configuration is the same, ok? As you can see here, ok? I'm using Ubuntu here, but on Windows it's the same thing, ok?

As I said, it's cross-platform. The configurations are the same, alright?

So that's it, ok? I hope you enjoyed this lesson of ours. Any doubt or question, you can ask in our forum, ok?

And work with VirtualBox, ok? I work with VirtualBox, ok? I don't work with any other type of virtualization, alright?

So that's it, see you later!

@3

---

# Kali Linux Installation on VirtualBox

Hello everyone! How are you all doing?

Well, another lesson here. We're going to install our Kali Linux.

It's important that you have already installed VirtualBox. This is important. Don't use other types of virtualization systems. Use VirtualBox, ok? Because it's cross-platform and it's completely free.

So, we can have the complete functionality of Kali Linux through VirtualBox.

So, it's important that you follow exactly what we're doing here in this installation lesson, ok?

## Kali Linux Download

So, the first thing: enter the Kali Linux website, **Kali.org** and download our virtual machine.

So, you can come here, enter the homepage. Go to "Download". There you have the type of installation you want to do.

I suggest you do the **virtual machines** installation. It's simpler, faster. So, that's what I recommend you work with, ok?

So, you come here, click here and download here, look, our Kali Linux on VirtualBox.

**Don't use other virtualization systems**, ok? Because many people use other virtualization systems and have problems. Then they need support, anyway. And I don't provide support regarding other systems. Only on VirtualBox itself, ok?

### Torrent Download

So, download via torrent. I suggest you go via torrent, because it's a heavy file. So, if you have unstable internet, if you have internet that might drop, and so on, then I suggest you download via torrent. It's safer for you to use.

So, VirtualBox is what I recommend you use.

## File Extraction

Then, after you download our file via torrent here, you need to extract this file.

On Windows, you have to use a program that does the extraction. Like **7-Zip**? You can download this program for Windows too.

So, for Windows, just download it here, look. If you don't have it, you can download it from the **7-zip.org** website. This is our program for Windows.

So, install it and extract this file. You can extract your file with 7-Zip, ok? Which we download by default, ok?

So, on your Windows, download the program, which is a decompressor. It's equivalent to the famous WinRAR, right? Which we use a lot.

So, here we can also download and decompress.

## VirtualBox Import

So, after you've done the file extraction here, it will generate a new folder here. Inside it we have two files: one that is **.vdi**.

This VDI is the file - it is the Kali Linux system itself. Let's say, the virtual hard disk itself, ok.

And this one here, the **.vbox**, which is the file that is executed by VirtualBox, which will be opened by VirtualBox. That's why it's linked to this VDI file, which is from our Kali Linux VirtualBox, ok?

So, you click here on the **.vbox** file and open it with Oracle VirtualBox, to be able to import the system here, ok? This is very important to do this configuration step, ok?

So, it's a ready machine. It's not that, you don't need to mess around. We won't need to do the installation from scratch, anyway. So, everything is ready.

## Important Configurations

What you need to do now is work on your network part. Configure your network part and other optional configurations, like RAM memory, some CPU configuration that you need.

### Hardware Requirements

So, it's necessary that you have good hardware capacity to be able to use it. Kali Linux has many tools, it's a very complete and very heavy platform at the same time.

So, it's necessary that you have hardware of **at least 4 or 8 GB of RAM memory** just for Kali Linux. And **minimum 4 CPU cores** for processing for it.

So, this is very important.

### Network Configurations

And also, the important part is also the network configurations. **Don't use NAT type configuration**.

So, let's see here: in the settings tab. You imported the machine, click here on **Settings**.

Then, our network fields will be here, for example. **I never work via NAT**, because you won't make your internet accessible.

So, always work in **Bridged** mode, because this way, we'll be able to work with Kali Linux with a real IP address. This will work with your IPv4 and IPv6 too, if it's active on your network.

So, this is very important.

The name is the name of your network interface. On your Windows, you need to know what your network interface is that you're going to use. So, this is very important for you to know how to work.

So, well, **promiscuous mode**: leave it as "allow all", because then Kali Linux, as it has many tools, many things, so it's important that you have access to your network. This is also very important.

### System Configurations

Let's see here in the **System** part. As I said: RAM memory of **at least 4 to 8 GB**. Yes, at least 4 GB RAM, 8 GB is the minimum. Because Kali Linux is very heavy and it's important that you have good hardware for it.

**Processor**: as I said, about **4 cores minimum**. That's what I ask you to use. This is very important.

Well, graphics card: Kali Linux doesn't work by default. It works more with the processor itself. So, graphics card, GPU, it doesn't work.

So, these are the two most important resources, ok? This is very important.

### Optional Configurations

Now, the other optional ones, like audio, you can disable the audio. We don't use audio. You can disable it.

So, let's check again: how you configured this is very important. On the network card, always leave it in **bridged mode**. Your system, both in RAM memory and processing, have good hardware so you can work here peacefully, ok?

Give an **OK**, save and let's enter our Kali Linux.

## Access Credentials

But just to get ahead here: the user is **kali/kali**. It's here in our description. Let's see if they can use them here. It's here: user **kali** and password **kali**. This is the regular user, regular user of Kali Linux.

Later, we can enter as a root user, anyway. I'll just leave it for a next lesson how we can do this type of configuration.

### Keyboard Configuration

And the keyboard by default is the standard North American keyboard. So, for you who are going to use the standard Brazilian keyboard, for example, which is the one that has the ABNT standard, then you'll have some keys there a little different to use. But you can change this here later.

## Prerequisite: Linux Knowledge

And, folks, remembering again here, I'll warn you: **it's necessary that you have knowledge in Linux**.

There are many things here that I can't talk about because I already have a Linux course. So, I can't teach Linux and Kali Linux at the same time.

So, you already have to have good knowledge about Linux: command configurations, text editors, vim, nano, things like that. How does Linux work?

Because Kali Linux works directly on the Debian platform, on the Debian system. So, it's important that you already have Linux knowledge, how it works before taking this Kali Linux course.

Kali Linux is an advanced system. So, you need to have a knowledge base, otherwise you'll be lost, you won't be able to make the configurations, you won't be able to use the tools.

This gets a lot of complaints from my students and I say it, I warn them, unfortunately it's ignored and they suffer with the experience, because they don't have Linux knowledge, they don't know about Linux. So, then they suffer a bit to learn to work with very basic things.

So, here's the warning: it's very, very important - you knowing, it's practically mandatory - you knowing Linux before taking our Kali Linux course.

So, here's the warning. The warning applies to all lessons. So this is very, very important.

## Starting the System

So, let's go. I'll start our VirtualBox system here and I'll enlarge the little screen here so you can see better, so you can see better in our video. This is important.

So, Kali Linux is a penetration testing system and Kali Linux is a heavy machine, it has many programs, many tools, everything for pentest practically.

So, today we're going to study a lot with all these tools too. So that's why it's important to have quality, good hardware, because otherwise it gets very heavy. Kali Linux can crash your machine, anyway, if it's too heavy.

So it's important to have a good system to work with our Kali Linux, ok?

### System Login

So, the first thing I have to do: let's enter the platform here. The login and password is **kali/kali**, I already told you that, ok?

So, **kali** user and password **kali**. Login. We'll be able to enter our platform here.

## Initial Configurations

So, the first thing we'll have to do is know what our terminal configurations are. I think I'll leave it for a next lesson and I'll do some terminal configurations, like, for example, via SSH.

So, if you need to leave SSH enabled, then see in the configurations lesson, first steps, configurations through our terminal, ok?

So, open the terminal here and here are all the configurations that are made through our terminal, ok?

I'll use it a lot. Some tools, obviously, I'll use through Kali Linux itself here, ok?

So, there are all our tools that I'll show in the lesson. There are many tools, as I said, there are many and various tools. So it's important to know how to use them and the terminal too, ok?

This is important here: learning to use our terminal, enabling SSH for remote access, in case you want, for example, to use SSH in a Putty on Windows or PowerShell itself, PowerShell via SSH. It's possible to do all this too.

### Connectivity Check

So, folks, that's it, ok? So I hope you liked it. Check those network configurations too, right? See if it got an IP address, if it got a valid IP address, right? In IPv4 and IPv6, ok?

You can type the command, for example:
```
hostname -I
```

And see here, look, a valid IPv4 address, right? So a 192.168.1.125, which it got from my local network, and IPv6, right? In case your internet provider has IPv6 too, ok?

So, all this is very important for us to start doing our installations, configurations and everything else here.

## Course Methodology

Well, throughout our course, I'll use Kali Linux. Depending on it, sometimes I'll use only via terminal, right? I'm working with desktop environment, ok?

So, I'll generally work via terminal like this so you can see better. Other times, I'll use the graphical interface itself, right? Of Kali Linux itself, right?

To work with the tools, I'll do many installations, configurations, ok?

So, there will be many, many hours of content for us to work with, ok?

## Final Recommendations

So, that's it. Any doubt or question, you can ask there in our course forum, ok?

It's very important that you follow exactly what I'm doing, ok? **Don't change anything, don't mess with anything**, ok? Neither virtualization system, nor anything like that, ok?

So, feel free, right? To ask about the program, in case you have any doubt, because I'll answer as quickly as possible.

So, that's it. See you later, folks!


---

@4

# Kali Linux Installation on VirtualBox

Hello everyone! How are you all doing?

Well, another lesson here. We're going to install our Kali Linux.

It's important that you have already installed VirtualBox. This is important. Don't use other types of virtualization systems. Use VirtualBox, ok? Because it's cross-platform and it's completely free.

So, we can have the complete functionality of Kali Linux through VirtualBox.

So, it's important that you follow exactly what we're doing here in this installation lesson, ok?

## Kali Linux Download

So, the first thing: enter the Kali Linux website, **Kali.org** and download our virtual machine.

So, you can come here, enter the homepage. Go to "Download". There you have the type of installation you want to do.

I suggest you do the **virtual machines** installation. It's simpler, faster. So, that's what I recommend you work with, ok?

So, you come here, click here and download here, look, our Kali Linux on VirtualBox.

**Don't use other virtualization systems**, ok? Because many people use other virtualization systems and have problems. Then they need support, anyway. And I don't provide support regarding other systems. Only on VirtualBox itself, ok?

### Torrent Download

So, download via torrent. I suggest you go via torrent, because it's a heavy file. So, if you have unstable internet, if you have internet that might drop, and so on, then I suggest you download via torrent. It's safer for you to use.

So, VirtualBox is what I recommend you use.

## File Extraction

Then, after you download our file via torrent here, you need to extract this file.

On Windows, you have to use a program that does the extraction. Like **7-Zip**? You can download this program for Windows too.

So, for Windows, just download it here, look. If you don't have it, you can download it from the **7-zip.org** website. This is our program for Windows.

So, install it and extract this file. You can extract your file with 7-Zip, ok? Which we download by default, ok?

So, on your Windows, download the program, which is a decompressor. It's equivalent to the famous WinRAR, right? Which we use a lot.

So, here we can also download and decompress.

## VirtualBox Import

So, after you've done the file extraction here, it will generate a new folder here. Inside it we have two files: one that is **.vdi**.

This VDI is the file - it is the Kali Linux system itself. Let's say, the virtual hard disk itself, ok.

And this one here, the **.vbox**, which is the file that is executed by VirtualBox, which will be opened by VirtualBox. That's why it's linked to this VDI file, which is from our Kali Linux VirtualBox, ok?

So, you click here on the **.vbox** file and open it with Oracle VirtualBox, to be able to import the system here, ok? This is very important to do this configuration step, ok?

So, it's a ready machine. It's not that, you don't need to mess around. We won't need to do the installation from scratch, anyway. So, everything is ready.

## Important Configurations

What you need to do now is work on your network part. Configure your network part and other optional configurations, like RAM memory, some CPU configuration that you need.

### Hardware Requirements

So, it's necessary that you have good hardware capacity to be able to use it. Kali Linux has many tools, it's a very complete and very heavy platform at the same time.

So, it's necessary that you have hardware of **at least 4 or 8 GB of RAM memory** just for Kali Linux. And **minimum 4 CPU cores** for processing for it.

So, this is very important.

### Network Configurations

And also, the important part is also the network configurations. **Don't use NAT type configuration**.

So, let's see here: in the settings tab. You imported the machine, click here on **Settings**.

Then, our network fields will be here, for example. **I never work via NAT**, because you won't make your internet accessible.

So, always work in **Bridged** mode, because this way, we'll be able to work with Kali Linux with a real IP address. This will work with your IPv4 and IPv6 too, if it's active on your network.

So, this is very important.

The name is the name of your network interface. On your Windows, you need to know what your network interface is that you're going to use. So, this is very important for you to know how to work.

So, well, **promiscuous mode**: leave it as "allow all", because then Kali Linux, as it has many tools, many things, so it's important that you have access to your network. This is also very important.

### System Configurations

Let's see here in the **System** part. As I said: RAM memory of **at least 4 to 8 GB**. Yes, at least 4 GB RAM, 8 GB is the minimum. Because Kali Linux is very heavy and it's important that you have good hardware for it.

**Processor**: as I said, about **4 cores minimum**. That's what I ask you to use. This is very important.

Well, graphics card: Kali Linux doesn't work by default. It works more with the processor itself. So, graphics card, GPU, it doesn't work.

So, these are the two most important resources, ok? This is very important.

### Optional Configurations

Now, the other optional ones, like audio, you can disable the audio. We don't use audio. You can disable it.

So, let's check again: how you configured this is very important. On the network card, always leave it in **bridged mode**. Your system, both in RAM memory and processing, have good hardware so you can work here peacefully, ok?

Give an **OK**, save and let's enter our Kali Linux.

## Access Credentials

But just to get ahead here: the user is **kali/kali**. It's here in our description. Let's see if they can use them here. It's here: user **kali** and password **kali**. This is the regular user, regular user of Kali Linux.

Later, we can enter as a root user, anyway. I'll just leave it for a next lesson how we can do this type of configuration.

### Keyboard Configuration

And the keyboard by default is the standard North American keyboard. So, for you who are going to use the standard Brazilian keyboard, for example, which is the one that has the ABNT standard, then you'll have some keys there a little different to use. But you can change this here later.

## Prerequisite: Linux Knowledge

And, folks, remembering again here, I'll warn you: **it's necessary that you have knowledge in Linux**.

There are many things here that I can't talk about because I already have a Linux course. So, I can't teach Linux and Kali Linux at the same time.

So, you already have to have good knowledge about Linux: command configurations, text editors, vim, nano, things like that. How does Linux work?

Because Kali Linux works directly on the Debian platform, on the Debian system. So, it's important that you already have Linux knowledge, how it works before taking this Kali Linux course.

Kali Linux is an advanced system. So, you need to have a knowledge base, otherwise you'll be lost, you won't be able to make the configurations, you won't be able to use the tools.

This gets a lot of complaints from my students and I say it, I warn them, unfortunately it's ignored and they suffer with the experience, because they don't have Linux knowledge, they don't know about Linux. So, then they suffer a bit to learn to work with very basic things.

So, here's the warning: it's very, very important - you knowing, it's practically mandatory - you knowing Linux before taking our Kali Linux course.

So, here's the warning. The warning applies to all lessons. So this is very, very important.

## Starting the System

So, let's go. I'll start our VirtualBox system here and I'll enlarge the little screen here so you can see better, so you can see better in our video. This is important.

So, Kali Linux is a penetration testing system and Kali Linux is a heavy machine, it has many programs, many tools, everything for pentest practically.

So, today we're going to study a lot with all these tools too. So that's why it's important to have quality, good hardware, because otherwise it gets very heavy. Kali Linux can crash your machine, anyway, if it's too heavy.

So it's important to have a good system to work with our Kali Linux, ok?

### System Login

So, the first thing I have to do: let's enter the platform here. The login and password is **kali/kali**, I already told you that, ok?

So, **kali** user and password **kali**. Login. We'll be able to enter our platform here.

## Initial Configurations

So, the first thing we'll have to do is know what our terminal configurations are. I think I'll leave it for a next lesson and I'll do some terminal configurations, like, for example, via SSH.

So, if you need to leave SSH enabled, then see in the configurations lesson, first steps, configurations through our terminal, ok?

So, open the terminal here and here are all the configurations that are made through our terminal, ok?

I'll use it a lot. Some tools, obviously, I'll use through Kali Linux itself here, ok?

So, there are all our tools that I'll show in the lesson. There are many tools, as I said, there are many and various tools. So it's important to know how to use them and the terminal too, ok?

This is important here: learning to use our terminal, enabling SSH for remote access, in case you want, for example, to use SSH in a Putty on Windows or PowerShell itself, PowerShell via SSH. It's possible to do all this too.

### Connectivity Check

So, folks, that's it, ok? So I hope you liked it. Check those network configurations too, right? See if it got an IP address, if it got a valid IP address, right? In IPv4 and IPv6, ok?

You can type the command, for example:
```
hostname -I
```

And see here, look, a valid IPv4 address, right? So a 192.168.1.125, which it got from my local network, and IPv6, right? In case your internet provider has IPv6 too, ok?

So, all this is very important for us to start doing our installations, configurations and everything else here.

## Course Methodology

Well, throughout our course, I'll use Kali Linux. Depending on it, sometimes I'll use only via terminal, right? I'm working with desktop environment, ok?

So, I'll generally work via terminal like this so you can see better. Other times, I'll use the graphical interface itself, right? Of Kali Linux itself, right?

To work with the tools, I'll do many installations, configurations, ok?

So, there will be many, many hours of content for us to work with, ok?

## Final Recommendations

So, that's it. Any doubt or question, you can ask there in our course forum, ok?

It's very important that you follow exactly what I'm doing, ok? **Don't change anything, don't mess with anything**, ok? Neither virtualization system, nor anything like that, ok?

So, feel free, right? To ask about the program, in case you have any doubt, because I'll answer as quickly as possible.

So, that's it. See you later, folks!


---

@5

# Wireless Hacking Setup - Lab Configuration

Hello everyone! How are you all doing?

Well, another lesson here. We're going to start our section on **Wireless Hacking** or **Wi-Fi attacks**.

But for this we need a setup. We'll explain here to you why we need these configurations or equipment, otherwise we won't be able to do or start the next lessons, ok?

## Required Equipment

So, for us to be able to continue here, we need:

### 1. Computers/Devices
- **At least two PCs or phones** with Wi-Fi antennas to make our lab
- **At least one machine with Windows 7 or 10**, anyway, also with Wi-Fi. It can be a laptop or even another virtual machine, if you prefer. It can also be used

### 2. Wi-Fi Router
- **A router** - can be any type of Wi-Fi router that supports **WEP, WPA and WPA2** encryption. This is also very important
- All routers nowadays, whether a more advanced or simpler model, have these functionalities

### 3. USB Wi-Fi Adapter (MOST IMPORTANT)
And the most important: in our Kali Linux, our operating system, we'll need a **USB Wi-Fi adapter** that enables the use of **monitor mode**, that is, the use of Wi-Fi connection monitoring.

**And not all models work!** They are generally more expensive models, they are generally models that have that antenna, that have high gain, have a slightly more powerful chipset. That's why they are more expensive.

I'll even leave you the link on the site for you to take a look.

#### Compatible Models
It's not just any model, as I said. If you look, for example, on e-commerce sites, we have some models here:

- **This one here works** - these are the more expensive models
- **This one here also supports** - WN722N - these are the more expensive models
- **This one here doesn't support**
- **This one here doesn't** - there's no way to do it

They are really more expensive models. So, if you want to do a wireless hacking test, you need to have a more powerful USB adapter.

This one here also works, ok? They are chips, they are more expensive Wi-Fi adapters. Only some of them support it, not all of them support it, ok?

**Therefore, if you don't have the adequate equipment, we won't be able to do our lesson properly.**

## VirtualBox Configuration

I'm going to use an exactly identical model. Our router will be exactly this same model here. Any type of router that contains this type of encryption - all of them, the most modern ones, even if it's the cheapest, have it. So there's no problem with that.

Let's open here. I'm using my VirtualBox. I have my Wi-Fi on my machine here, as you can use. It uses the Wi-Fi network, but what will I have to do?

I'm going to throw this my adapter, this my little Wi-Fi adapter here, inside my Kali Linux, which is inside my virtual machine.

### Configuring USB in VirtualBox

So let's see here in Kali Linux: **Settings** → **USB**, because since it's a USB adapter, it's in the USB part for us to configure.

Here, the **USB 2.0 adapter** is sufficient. Let's see here... let's see the green icon. Mine, since it's an Atheros chip, the **USB WLAN**, so I'm going to choose this one.

It's the name of the chip, of the chip that's inside our adapter. That's why not all of them, again, not all models support it. The more expensive models that we can make this configuration.

Give an **OK**.

### Configuration Result

So, once this is done, our USB adapter will leave our real machine, our physical machine, and will be plugged into our Kali Linux, as if it were inside our Kali Linux directly.

Let's initialize our system here now. You can see that it will leave our machine, it will be disconnected here and will be connected to our Kali Linux directly.

Here in our system, if you go to Windows too, it's the same thing: it will stop serving your Windows system, for example, it will serve Kali Linux exclusively.

## Testing the Configuration

Let's enter here as root user: 123456.

You can use terminal too, no problem.

So let's see here, look: Wi-Fi network. Do you see? So we already have our Wi-Fi network working here.

And more importantly: let's open our terminal. Our Kali Linux, I'll leave it maximized here so you can see better.

### Identifying the Wi-Fi Adapter

So, in our Kali Linux terminal, we'll have to configure our Wi-Fi card, our adapter.

The command is:
```bash
iwconfig
```

We can see: we have our **wlan0** here, which is our chip, our USB Wi-Fi adapter.

So, we have our **wlan0** here, which is what we'll work with in the lessons about our Wi-Fi section here.

Remember: if you have some other Wi-Fi chip or an onboard Wi-Fi card, it might appear with a different name, like **wlan1**, for example, if you have more than one. No problem.

The important thing is that you can identify which one is your card.

### Viewing the Configurations

So let's do... let's type our command, if you want to visualize:
```bash
ifconfig wlan0
```

Which is our USB adapter.

So we have our **MAC address** here. Since it's not connected to anything, then there's no problem with packets received or sent.

### Scanning Networks

But let's do a scan. If you want to do a scan, it's also possible. You can use the command:
```bash
iw list
```

If you want:
```bash
iwlist wlan0 scan
```

For you to do it.

Then what will it do? It will scan all the Wi-Fi networks it can capture.

There's the name, the power, the quality, whether it's encrypted or not, the name of that network, its frequency (2.4 GHz). If you have an adapter with 5 GHz, it can also capture this frequency.

We have NET, Claro Wi-Fi, here another network... so there's encryption. It's enabled, as you can see.

Anyway, we have various types of Wi-Fi networks in my region. If you have them too, you'll see your networks.

It's basically this here, it's basically this list here that we see here in our configuration. Nothing more.

## Configuring Monitor Mode

So, now that we know... well, if you want to use our command, now we'll have to bring up our card to activate the network interface.

So the command is:
```bash
ifconfig wlan0 up
```

We'll leave it active.

### Activating Monitor Mode

And to put it in **monitor mode**, which is the most important - leave it in monitoring mode - we have to use our:
```bash
airmon-ng start wlan0
```

This is our command. **Airmon-ng** is a program that already comes installed in our Kali Linux.

And `start wlan0`. The **wlan0** is our Wi-Fi card that we're going to configure.

And there you go!

### Checking the Configuration

So look here: our Atheros chip. That's why I say again: **it's not just any type of USB**. Only cards with more powerful chips really have this type of resource. We can do this type of monitoring.

If you want to see how it turned out, run the command:
```bash
iwconfig wlan0
```

Look here how it turned out.

If you want to visualize too, you can use the command:
```bash
ifconfig
```

So it no longer appears as just **wlan0**, but as **wlan0mon**.

So, we changed its configuration type to monitoring.

## Final Result

And with this, from now on, we can do all our analysis of what happens inside our USB Wi-Fi network card.

So, it's from here that we can:
- Monitor everything
- Capture packets
- Use, obviously, other programs

So, here we can do a lot of cool stuff from now on, ok?

## Conclusion

So, folks, that's it here, ok? Our setup lesson to configure our Wi-Fi network card.

**Remembering again that it's not just any type of USB adapter!**

So, if you don't have a USB adapter of these specific models, unfortunately you won't be able to proceed, you won't be able to do our tests in the next lessons, ok?

So, folks, that's it. Any doubt or question you can leave there in our course forum.

A hug to everyone!

---

@6

# Theoretical Lesson on WLAN and Its Vulnerabilities

Well, throughout this lesson, we're going to present to you a theoretical explanation, quickly, about how a Wi-Fi network basically works, called WLAN, and also its inherent vulnerabilities.

So, here we'll work specifically on these vulnerabilities that we have in our Wi-Fi connections.

## WLAN Frame Structure

In WLAN, communication happens through frames, as can be seen in the frame control. There are various types of blocks or stages that we can divide into bytes. There are various pieces of information that we have here.

Basically, a frame has this type of characteristics. And the frame control field itself, which is this first one here, has a more complex subdomain.

So, within our frame control, which is the most important part we want to work with, it has two bytes. It has here some types of frames, some special frame that is the "type". We have here inside various other types of frames or other bits that we can talk about.

And the most important is this frame before the type. In this type of type, we have three types of WLAN structures:

* One that is management
* Another that is control  
* And the most important, which is data

## Management Frames

These management frames will be basically responsible for maintenance and communication between access points and wireless clients.

They can basically have three types of subtypes:

* Authentication and deauthentication
* Association request and association response
* Reassociation request (how it reconnects)
* Disassociation and its response
* Beacon, probe request and its response

## Control and Data Frames

Control frames are basically responsible for ensuring the correct data exchange between these points. In them we have some types of subtypes: we have send requests, we have ClearToSend and confirmation.

All these types of frames that are data carry the real data that is sent.

## Analysis Tools

Through this data, we can intercept or track these frames through a program that we'll use in our Kali Linux, called Wireshark, for example. We have various other programs, like Airodump or TCPDump or Tshark, among various others, which we'll show you throughout this lesson.

## Vulnerabilities

It's these frames, or frame control mainly, that we'll use to do all our verification. So, this would be our security vulnerability.

Even in WPA, WPA2 networks, anyway, they all have this type of vulnerability. And here we can also perform all our lessons and all our laboratories and experiments.

So, just for you to know about this scenario - how it works or where we'll act, or how our wireless attack works and its vulnerabilities - these are inherent vulnerabilities that are impossible, at least for now, to be corrected.

## Conclusion

So, folks, that's it. We'll continue in the next lessons already moving to the practical part, with the laboratories being performed.

See you later, a hug to everyone!

---

@7

# Wi-Fi Network Monitoring Lesson

Hello everyone! How are you all doing?

Well, another lesson here. This time we're going to learn how we can monitor our wireless environment.

Let's enter our environment here. If you're already in any environment today, especially in big cities, large metropolises or in large areas, you'll obviously have a lot of Wi-Fi frequency saturation.

So, you can do this in any area, since nowadays Wi-Fi is more present than ever.

## Environment Configuration

Let's go back to our environment here. I'm in my Kali Linux running through my Ubuntu, but you can also do this through your terminal. No problem at all, ok?

I'll adjust here to make it better visible for you.

So let's see, first check if it's really in monitoring mode. So run an `iwconfig` to see if it's in monitor monitoring mode.

This is the first thing we'll have to check.

## Using Airodump-ng

With this now, we can use our Airodump. With Airodump, what can we do? Monitor our network.

Execute: `airodump-ng wlan0mon`

Let me go back here to our command: `airodump-ng wlan0mon` for monitoring mode.

It will keep monitoring our entire network here.

## Information Collected

This here is a very interesting and very important part. Why? Here we have various types of information that we'll use throughout our lessons.

### ESSID (Network Name)
Like, for example, here we have the name of each network. We already know this - the names of each network. When we're going to access a network, they all have names. Here we'll have the ESSID.

We have "CriamoLo" here. I have our "WiFi Teste" here that we can be using. There are others here too, like "VEM", which is the name of our network.

### Authentication Method
We have the authentication method. How is authentication done? Most nowadays is all through PSK, which is the most secure method.

### Encryption Type
The encryption type: WPA2 is the most used today. There's also WEP, but this is less secure. So this type of configuration will be much less used.

Some open networks, including "NET_CLARO_WIFI", is an open network, so it doesn't have a password. But for you to be able to browse, you need a login, if I'm not mistaken. So here there's another type of security.

### Channel and Power
The channel: generally they're also automatic. Here we have channel 1, channel 11, which is where our frequency is.

Amount of data that was transported from one to another, their power, the power of each signal. The smaller the better: if it's -40, it's closer; when it gets to -80, it's even farther away.

So, the higher the value (closer to zero), the better; the lower (more negative), the worse. This is the logic of our power. Since it has a negative sign, the closer to zero, the better it gets; the farther away (more negative), the worse it gets.

### MAC Address
And here we have our MAC Address too. We'll work a lot with these MAC Addresses in these lessons too.

In the lessons to come, we'll work quite a bit with these MAC Addresses here. These MAC Addresses here are the MAC Addresses of the routers - called BSSID.

So they all have our MAC Address here, and down here we have some important information.

### Connected Devices
Like, for example, we have the MAC Addresses of our routers and the MAC Addresses of devices that are connected to these routers.

So, ending in 98F2, we have the WiFi here, and we have some hosts: cell phones, notebooks, anyway, any type of Wi-Fi connection. We can see that they're listed here with our MAC Address, as you can see here.

But we have others too, like 4A43, which is this other router here. I'm here in an environment with few Wi-Fi connections, but you, if you're in a quite voluminous connection, with quite a lot of Wi-Fi, quite a lot of routers, will be able to see quite a lot.

### Additional Information
So here we have the power of our connection, if there's some type of lost packet, if there are some type of lost packets - we can also see this here, which is also quite important.

## Channel Filtering

This here is the basic part of being able to monitor. If I want to monitor, for example, a specific channel, I can monitor a single channel to filter this, which also helps a lot and is very important.

To exit the screen, press Ctrl+C to be able to exit our screen here, and let's try to configure here, for example, a specific channel.

It's the same command: Airodump, we can complement here:
`airodump-ng wlan0mon -c 1`

For example, then we'll filter. Here, look, channel 1, do you see? So we filtered only this type of connection, which makes it easier to choose your target, for example.

## BSSID Filtering

This is important to configure. We can still filter by our BSSID, filter by a specific router.

So, for example, let's filter here by our router, let's filter this little router of ours here.

Ctrl+C to exit. The same command, you can filter by our channel, if you want, or by our BSSID.

So let's use here as command:
`airodump-ng wlan0mon -c 1 --bssid [MAC_ADDRESS]`

There you go. So here we have only one, so it will only list only one single access point, and all its connections that are connected to it.

## Conclusion

Folks, this here is a phase - we're still at the very beginning, but it's important that you know all these types of techniques, because they will be used later in the more advanced lessons.

Well, so folks, that's it. We'll continue here to our next lesson.

A hug to everyone!

---

@8

# Lesson on Locating and Attacking Hidden Networks

Hello everyone, students! How are you all doing?

Well, another lesson. This time we will work on locating hidden networks on our Kali Linux.

## Initial Router Configuration

Firstly, we need a router. If you need to access any router, it can be a simpler one, but most modern ones have this type of feature.

We will do the following: we will work and try to locate hidden networks near your location.

So let's start here. I am here with my router, on the Wireless section. Here on my router, it is here: "Display network name".

Here you can display. Here there is also an explanation: you will display your SSID name. The name is the one that is shown when you try to connect to some network - it shows the name to you.

But you can hide it, you can hide it in such a way that people do not know the real name. In my case, it is "WiFi Test".

### Hiding the Network

Let's see here, let's try hiding our network. Let's uncheck "Display" here.

On my Windows, I also have another network, another Wi-Fi card, that also shows here all our Wi-Fi networks of our machine.

You can see that there is already a "Hidden Network" - you can see that it is already hidden, our network just hid.

Let's see here on my Kali Linux too - you can see that it is no longer there. My network does not appear anymore, you can see that it is also not here anymore.

So everything is hidden here: our network, our system.

## Setting Up Monitor Mode

Now let's do the following: let's configure our network card in monitor mode. Let's put it in monitor mode.

Remember to use our `wlan0` here.

So, `airmon-ng start wlan0` - let's put it in monitor mode.

I will leave it configured. And here we have two configurations. In fact, it's not a warning.

As we did not kill our network management interface (this network management part here), it warns you itself.

So it shows you the configuration and already disables it.

### Eliminating Interferences

We are now configured. You can use this command here: `airmon-ng check kill` for you to kill any type of process that may cause problems.

So it automatically kills for you these two types of processes so you can configure.

After that, run `ifconfig` here to see if we really have the `wlan0mon`, which we are in monitoring mode.

## Detecting Hidden Networks

Let's run `airodump-ng`. We already know our network, so it shouldn't be that difficult.

Our network is this one here: the strongest signal, -40. It will appear with these empty fields here. The name has zero characters.

I have the type of encryption it uses, the authentication. I have some information, even so. You can see the power.

I know it's this one because it's the only one of my network here. But if you have some other hidden networks, you will see several others of these here with this type of empty characters.

### Filtering by Channel

Maybe the number of your network changes. You can filter to a specific channel to better perform our attack.

Let's filter by channel 10. It's working here. Let's interrupt here with Ctrl+C.

Let's run normally like our command `airodump-ng`, but with `-c 10` (channel 10 is the only one, if I'm not mistaken).

If it's not the only one, it's one of the few. We can perform our attack better.

## Discovery Strategy

What will be our attack? We will drop some connection that is in it. There is no connection in it yet to discover the actual network name.

So we have two ways:
1. You wait for someone to connect to it (which I think is a bit more unlikely)
2. You drop the connections that are already in it

So, very likely, someone should be connected to this network. It's not the case because we will make our connection.

After we drop that connection or wait for someone to connect, we will be able to visualize here what the BSSID is, what station is being associated with our MAC Address.

### Connecting a Device

For now, we don't have any here. Let's see here on our network on Windows. Let's connect to some specific network here so we can see.

Let's use here "Hidden Network". Let's connect here. Hidden Network is hidden. To be able to connect, we need the settings.

We can know here our network. So let's go to "Hidden Network". If you want to know, let's see here in "Hidden Network". Let's know the name.

So you don't know the name, there is no way. But it's "WiFi Test". We already know here.

This one here: "WiFi Test". Let's see here "WiFi Test". In this one, it will ask for the password.

Yes, it's 123456789. To be able to connect, it will ask for the password. Obviously: 123456789.

Ready. Now it will connect. Now yes, let's know here what will connect to our router.

## Discovering Network Information

We have already discovered here. You can see here "WiFi Test". It was discovered because someone connected - it was our router here, our station MAC Address: ending 17A9.

So it connected. We were able to discover. Here it also connected. It will appear - here it will give "Hidden Network" or hidden network. It will appear here its little name after.

And here it is already connected. We have discovered our name.

## Executing Deauthentication Attack

Now we can drop this. Not only this type of connection, but any type of Wi-Fi connection. Not necessarily Wi-Fi hidden, but drop any one.

That's why we need a powerful Wi-Fi card, because we have to send signals to drop our network configuration.

Our Hidden Network is already connected. Let me see here. It disconnected again. Our connection here was made successfully.

### Identifying Targets

Let's do it here. We have already discovered, including, what is our MAC Address: this ending C150. We also have the station - the MAC Address of the connected station.

You can attack or drop the attack of that connection with both MAC Addresses, or just with one. It is more efficient with both.

If you want to know: only with the BSSID works very well with cell phones. For desktop stations, something larger, a notebook, maybe both MAC Addresses work better.

### Executing the Attack

Let's do it here in our configuration. Let's use our `aireplay-ng`. Let's use our command:

```bash
aireplay-ng -0 100 -a [BSSID] wlan0mon
```

- `-0`: deauthentication mode
- `100`: 100 attacks (can be more efficient)
- `-a`: with our base, this one here BSSID

You might get it right or not, but with more efficiency, if you use (as it already says) the client MAC:

```bash
aireplay-ng -0 100 -a [BSSID] -c [CLIENT_MAC] wlan0mon
```

This is another option too. You put here, before the `wlan0mon`, `-c` and the client MAC address - the complete client address. And then we have greater efficiency.

## Attack Result

I am connected here on my Windows. It will fall here our connection. The system takes a little while. It also depends on the Wi-Fi adapter you are using - if it's an external card, it's a little more efficient.

It disconnected. You can see? It is no longer connected. And the attack continues. It won't be able to connect.

It won't be able to connect. It doesn't matter, you can see? The person tries to connect, can't. The attack is continuing.

When it finishes the 100 attacks, you will see that the network has disappeared to try to connect. It finished. It's getting quite...

So this is the interesting part: it won't be able to. You can see that now that it stopped, now it can connect here to our Wi-Fi network.

Let me see here... Now yes, it connected. Can you see?

## Conclusion

So, guys, that's it. You can do this on your phone, on your... any type of device.

If you know the client address, even better - the attack is much more efficient. If not, you can test only by the BSSID on that router too. It's another option.

Alright, guys? So that's it.

If you have any questions, you can ask in the forum of our course.

Hugs for everyone!

---

@9

# **Lesson on MAC Address Alteration (MAC Spoofing)**

Hello everyone!

Well, here's another lesson. This time we're going to show you how we can alter our MAC Address, which is the physical address of our network card.

**What is MAC Address**

Wi-Fi or cable - they all have a MAC address. So this is very useful, for example, if you want to do something on your equipment and don't want to leave traces of your card's real address, or if you want to connect to a network with some specific MAC address type. So this is very important - we can alter our addressing.

**macchanger Tool**

We generally use our `macchanger` command. With `-h`, we can view its commands.

**Main Options**

We'll mainly use:
* `-r`: Random version - we can change our address to a random version that the system itself provides us
* `-m`: For manual configuration - configures in a fixed way, according to the addressing you want
* `-p`: Reset - to return to the permanent MAC address, which is from the hardware itself, made by the manufacturer

**Practical Procedure**

**Initial Preparation**

The first thing we have to do is check if our `wlan0` (our Wi-Fi network) is in monitoring mode. We need to take it out of monitoring mode.

```bash
airmon-ng stop wlan0mon
```

To leave it in normal mode and view it.

**Checking the Current MAC Address**

Now let's disable our card. If you want to view it, you can see our MAC address here:

```bash
ifconfig wlan0
```

We have the manufacturer's own address, which is the permanent address. This never changes, only the "current MAC" part - then we can make the alteration to the address we want.

**Disabling the Interface**

Let's execute a `down` - we'll leave it disabled for the moment:

```bash
ifconfig wlan0 down
```

If it disappeared again from our network...

**Changing to Random MAC**

Now let's change the address to a random one. Let's use:

```bash
macchanger -r wlan0
```

It chose this address here randomly (New MAC). Then we'll have to reactivate the interface.

**Verifying the Change**

You can use the `-s` command to view:

```bash
macchanger -s wlan0
```

The address shown is the one we selected. The `-s` shows what's active.

So here's the new address, very different from what it was before.

**Reactivating the Interface**

Let's reactivate:

```bash
ifconfig wlan0 up
ifconfig
```

Final `75F`... so it was really successfully changed from what it was originally.

**Changing to Specific MAC**

Now, if you want to set a specific MAC address, you can use:

```bash
ifconfig wlan0 down
macchanger -m 00:11:22:33:90:AB wlan0
```

An address that you want.

**Checking the Result**

Look how our table turned out:
* The **permanent** will always stay the same way
* The **current** that was being used
* What we want to change, which is the `90:AB` we chose

Let's reactivate again:

```bash
ifconfig wlan0 up
ifconfig
```

Final `90:AB`... so we managed to alter it.

**Returning to Original MAC**

If you want to use our original MAC Address again, we have the reset option:

```bash
ifconfig wlan0 down
macchanger -p wlan0
```

To return to the original. As it remained here: it returned to what it was originally - we chose to return to our original MAC Address.

```bash
ifconfig wlan0 up
ifconfig
```

Return to how we were before, which is the permanent MAC address from the manufacturer itself.

**Conclusion**

So that's it, folks. This is another authentication and configuration technique that we're going to use and will also use throughout our lessons.

So these are just some basic configurations for now, so that when we apply something more advanced, we'll use all of this at once. It's going to be very important.

All right? So that's it.

Hugs to everyone!

---

@10

# Lesson on Hidden Network Invasion and MAC Filter Bypass

Hello everyone! How are you all doing?

Well, here's another lesson. This time we're going to perform a type of invasion on a hidden network. We're going to discover, besides its name, also its MAC Address and, furthermore, we're going to invade and bypass the restriction through MAC Address filtering.

## MAC Address Filter

This is very common - mainly all routers, from the oldest to the newest ones, all of them have this: you can restrict access to our Wi-Fi network through a selective list of MAC Addresses.

That is, even if I know the password, even if I know the access credentials, it won't be able to access because the MAC Address isn't on this list. So you won't be able to make the connection even having the password.

We're going to bypass this: we're going to bypass the hidden network protection and we're going to bypass the MAC Address restriction. So you can see that almost nothing is really secure - we can bypass these two things.

## Initial Router Configuration

We're going to do this on Kali Linux. First thing I have to do: mainly we're going to enable the MAC Address filter.

I'm going to get the MAC Address of my card - I'm going to do it on my Ubuntu connection, but you can do it on Windows, no problem at all. You need to discover the MAC address.

On my Ubuntu, which will be my client (assuming a normal client), so I'm going to copy the MAC Address of my Wi-Fi network card.

### Configuring the Router

I'm going to put it here on my router. We can enable it - it will be my Ubuntu. The Wi-Fi router is enabled.

Here on our Wireless:
- I'm going to disable "Show network name"  
- I'm going to leave the network name as "WiFi"
- Channel, bandwidth: everything automatic

The MAC Address will be restricted - that is, it will only be able to connect with this MAC Address here. If not, it won't be able to.

### Testing the Legitimate Connection

Let's see here, connect to my hidden network. We can test: if you want the "WiFi", none... ready, I was able to connect perfectly.

Let's see our client list: HP, here channel B171. Here is my channel B171 - this is my restriction list. Everything is correct, it's connected successfully.

## Starting the Attack

Now we're going to do this on our Kali Linux. We're going to drop this connection, we're going to make it reconnect again. We're going to discover the name of that hidden network and, with that, we're also going to discover what the MAC address is.

Although we already know the address, we're assuming we're performing an attack on an unknown client in a controlled environment, so we have full access.

### Configuring Monitor Mode

First thing: let's configure monitor mode. Let's excuse... let's configure Kali now:

```bash
airmon-ng start wlan0
```

Found it active. Let's run `ifconfig` to see if it returned to our monitoring.

My Ubuntu (which is the client that will be attacked) is connected normally.

### Locating the Target

We're going to find our configuration on channel 10. We already did this in previous lessons - I'm going faster, I'm just recapping.

Let's find channel 10, our hidden network. Let's filter:

```bash
airodump-ng -c 10 wlan0mon
```

Here we can filter our attack. Let's see here: we have our channel 10, our hidden network here, our BSSID is connected.

If we have our connection, it will make it easier. C150 - we also have the client that's connected to this one: C150, our hidden one. Let's attack this one.

There's already a client, obviously. We already have an associated client. Let's drop it to discover the name (assuming we don't know it).

### Executing the Deauthentication Attack

Let's pause. This is the client and this is our router. Let's drop it.

Leave it monitoring. Let me open another terminal here to be able to configure.

Here our attacker: we're going to drop with our client. Let's get our target: it's this one C150, and our client is this one: ending B171.

```bash
aireplay-ng -0 100 -a [BSSID] -c B171 wlan0mon
```

Let's give the attack. It's going to disconnect.

## Discovering Information

Discovered here the "WiFi" - it already dropped, already discovered "WiFi" the name. I already discovered "WiFi" too - it already dropped.

Let me stop the attack here. Great, we already discovered. We already knew, but we're simulating, so the name of our hidden network is "WiFi".

The name of our client is this one here. Let me reconnect again - it's going to reconnect, reestablish itself.

Let me see my list here too. It's here associated. Ready, it's connected.

## MAC Address Cloning

Now we already have the name of our hidden network and the client/station MAC. What are we going to do? We already know who it is, we already know the name of our network (it has no password - it's open).

We're going to attack our network, even with that restriction. Let's do cloning here.

### Exiting Monitor Mode

Let's stop our card:

```bash
airmon-ng stop wlan0mon
ifconfig
```

To see if it really exited monitor mode.

### Cloning the MAC Address

Let's see here. Kali Linux already has this function, so you don't need to use `macchanger`. Kali Linux (and any Linux distribution) already has this type of resource.

I'm going to try to connect, but I won't be able to make the connection because I don't have the correct MAC Address. So I have to clone the MAC Address.

Let me edit here... let me delete here.

Now let's recreate again: hidden network, name "WiFi", no password. It connects.

Great! Let's see here again in edit. Let's see in the configuration - it has this cloned MAC.

### Applying the Cloned MAC

Now yes, let's copy the MAC address of our client that's enabled on this list: B171. This was the one from the list.

Let's clone this one. It can connect this one because it's in our restriction. Let's impersonate it: B171, cloned MAC address. Save, close.

Now we're going to be able to connect.

## Attack Result

But we have a problem: we have two. Our router won't know who is who. It's going to... both dropped. Maybe both won't be able to make the connection.

You can try to make the connection... I already connected!

`ifconfig` - look, it already got the IP address: 192.168.1.122.

Let's test here. Our original client won't be able to know who is who - the cloned MAC is just one. My Ubuntu also couldn't connect... or did it? Let's see... it managed too.

On my Kali Linux it managed too. So the person won't even know. The network administrator is going to find it very strange: the MAC Address is the same, but two devices are accessing with the same MAC.

### Testing Connectivity

I'm going to test my router here. Let me open my router in the terminal here:

```bash
ping 192.168.1.1
```

I'm pinging. Let's ping here: 192.168.1.1. We can try to access - I'm accessing.

I'm going to open the browser normally too. I'm accessing my router normally: 192.168.1.1 - TP-Link.

I'm going to access normally. That is, if I can access my router, I'm going to access the internet too. I'm browsing normally.

### Bypass Confirmation

Let me access here: 192.168.1.1. Ready, I'm inside.

So I managed to bypass. Maybe because there's an open session, but I'm here accessing. I'm going to access even this - it can be bypassed.

Even this is also bypassed. The TP-Link, my router won't know. I have a tab here, and it also managed to open. Only one person can access normally.

## Conclusion

So that's it, folks. You can see that even with restriction, we managed to bypass. We left it hidden, we left it with restricted MAC Address, but it didn't help - we managed to bypass.

This is a very important and very interesting Wi-Fi pentest lesson. We also know how you need to be careful.

If you work with Wi-Fi, you can never be too careful.

Well, folks, so that's it. The lesson was this one. Any questions you have, you can ask on our course forum so we can answer as quickly as possible.

Hugs to everyone!

---

@11

# Tutorial: Wi-Fi Security Auditing with Kali Linux

## Introduction

Hello, all students! How are you doing?

In this lesson, we're going to learn how to discover Wi-Fi passwords using handshake capture with techniques like the WPA/WPA2 handshake, which basically breaks our authentication through the use of brute force with a Wordlist. We're going to use Kali Linux itself, which is the standard operating system for this type of testing.

## Preparing the Environment

Basically, we need to follow what we've been doing so far. We have our router - everything is a controlled environment. It has our Wi-Fi "WiFi Test", which is displaying our name. It's a normal router with the configured name, automatic channel also configured, its name is being displayed. Its security is WPA2, which is the most recommended and what most people use in the wireless protocol.

The problem is that we configured a simple password: 1, 2, 3, 4, 5, 6, 7, 8, 9 - that is, this is very easy to crack with any type of Wordlist. So, it's a simple configuration to be able to make our environment configurations.

My Windows is here connected to "WiFi Test". It has no internet, but it's connected. Here we have our Kali Linux where we'll do the tests.

## Capture Process

First, we're going to monitor our Wi-Fi. We're going to drop the Windows connection that's connected, simulating an environment where there's a client connected to the router. How do we drop that client's connection? Usually it will connect automatically - we drop it and then it connects by itself, or the person goes there and connects again.

With this, we capture what we call a handshake, which is basically when our Kali Linux captures the packets transmitted from our client (our target) to our router. These packets are totally encrypted, so we can't read them directly. The packets are exchanged in the air through Wi-Fi connection or reconnection.

This handshake we capture will be used to make an offline attack, because if we were to attack a router directly, any type of router has protection against brute force, so we would be blocked. That's why we do the offline attack - we take that handshake and use our Wordlist on it.

## About Wordlists

Of course, we have our Wordlist in Kali Linux by default, which isn't much. You can find gigantic, enormous wordlists on the internet, with trillions and trillions of different words. These wordlists are fed through leaks of millions of passwords across the internet, from major sites, databases, etc. These wordlists keep growing more and more, and password complexity becomes easier to locate.

That's why nowadays you can see some sites that ask you to change your password, put a more difficult password. Many sites nowadays don't even let you use simple passwords - they have to have rules: minimum 8 characters, uppercase letters, lowercase letters, special characters, etc. All of this is to make it more difficult, because really, against the greater processing capacity of our machines and our Kali Linux, it's harder to keep everything secure.

## Configuring Monitor Mode

The first thing we need to do is put our network card in monitor mode. It's not there yet, so let's configure it.

```bash
airmon-ng start wlan0
```

If it doesn't appear, since we're doing many Wi-Fi lessons, remove the card from your USB port and put it back in and it will work.

Let's put our network card in monitoring mode so we can monitor the air. We already know what our target is, but let's monitor the air to capture a victim.

```bash
airodump-ng wlan0mon
```

## Identifying the Target

What we want is this "WiFi Test", with WPA2 authentication. Here we have our WiFi Test on channel 10, our MAC Address, and let's see our victim - our client that's connected to it. We can filter by channel to make it easier:

```bash
airodump-ng -c 10 wlan0mon
```

Now we have our router identified, we already have our target. Our Windows is connected to WiFi Test. We have the BSSID and our station (our client) that's connected to our router on channel 10.

## Capturing the Handshake

Now we're going to drop this connection, but first we need to be monitoring and capturing. Let's leave it here again in monitoring and filter by our channel and our BSSID, capturing our handshake.

```bash
airodump-ng -c 10 --bssid C0:25:E9:XX:XX:XX -w capture wlan0mon
```

It will create several files with this same name "capture": capture-01.cap, log file, etc. Our WiFi network card is configured.

It will monitor that frequency, that network normally, and most importantly: capture our handshake. But how can we do this when the client is connected normally? We're going to drop this connection and then it will automatically reconnect, since it was previously connected.

## Executing the Deauthentication Attack

Let's open another terminal to drop the connection, leaving this terminal active and on.

```bash
aireplay-ng -0 100 -a C0:25:E9:XX:XX:XX -c D7:3A:XX:XX:XX:XX wlan0mon
```

Where:
- `-0 100`: sends 100 deauthentication packets
- `-a`: router MAC (BSSID)  
- `-c`: client MAC

We're going to drop that connection by sending 100 packets. And it didn't take long - it already dropped. Let's finish the attack. It will reconnect again.

The client, simulating a real situation, will see that the WiFi is disconnected and will try to connect again. And ready! The handshake was captured! It even shows our BSSID. We can press Ctrl+C to exit.

We successfully got our file. The client managed to reconnect again, so it won't think anything unusual - it just had a momentary connectivity drop.

## Verifying Captured Files

Our handshake (our file) has already been created. Let's do an `ls` to see:

```bash
ls
```

It's here: "capture". This name "capture" was the name we gave in the command. It created several files: capture.cap (which we'll work with), plus other formats like CSV (log files), XML, etc. We'll work with this .cap.

## Cracking the Password

We've already captured our handshake, now let's work with this file. It's a common file that can be worked with aircrack, which is the command that serves to crack passwords using a Wordlist.

First, let's see the available wordlist:

```bash
ls /usr/share/wordlists/
```

We have some wordlists here. The one we want is "rockyou.txt". It's a large file, but it has millions of entries. It's compressed (.txt.gz), so let's decompress it:

```bash
gzip -d /usr/share/wordlists/rockyou.txt.gz
ls -lh /usr/share/wordlists/rockyou.txt
```

It's a 134 megabyte file, which is very little by today's standards. You can find wordlists with terabytes, with trillions and trillions of words. But for our test, this is sufficient.

## Running Aircrack

Now let's crack our capture.cap file using the wordlist:

```bash
aircrack-ng -b C0:25:E9:XX:XX:XX -w /usr/share/wordlists/rockyou.txt capture.cap
```

Where:
- `-b`: our BSSID
- `-w`: our wordlist
- `capture.cap`: file we need to crack

It was very fast! On my machine I got more than 3,100 words per second. Depending on your machine, this will depend a lot on your processor, power, model, year - all of this changes the time.

If it had to run through the entire list (which is small), it would take almost an hour. For a list of only 134MB! Imagine using a GPU, which has much more processing capacity for password cracking, or more powerful processors.

## Result

The password found was: **123456789**

Nothing we didn't already know - we had already said the password was this. So our WiFi was successfully "cracked".

## Conclusion and Security Recommendations

That's why it's important to use:
- Uppercase characters
- Lowercase characters  
- Special characters
- Long and complex passwords

I know it's a bit annoying, this security issue isn't very comfortable, but nowadays computers are getting more and more powerful, and we need to pay greater attention to passwords, especially when large password leaks from sites and enormous databases happen.

## Final Considerations

Folks, that was it! We managed to crack a password, we managed to drop our client, force it to reconnect, capture a handshake and execute a brute force on that file.

**Important**: This tutorial is for educational purposes only and should be used only on your own networks or with explicit authorization. Unauthorized use of these techniques is illegal.

*I hope you enjoyed it! Any doubts or questions, you can ask on our course forum. Hugs to everyone!*
