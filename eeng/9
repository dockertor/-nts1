# **Lesson on MAC Address Alteration (MAC Spoofing)**

Hello everyone!

Well, here's another lesson. This time we're going to show you how we can alter our MAC Address, which is the physical address of our network card.

**What is MAC Address**

Wi-Fi or cable - they all have a MAC address. So this is very useful, for example, if you want to do something on your equipment and don't want to leave traces of your card's real address, or if you want to connect to a network with some specific MAC address type. So this is very important - we can alter our addressing.

**macchanger Tool**

We generally use our `macchanger` command. With `-h`, we can view its commands.

**Main Options**

We'll mainly use:
* `-r`: Random version - we can change our address to a random version that the system itself provides us
* `-m`: For manual configuration - configures in a fixed way, according to the addressing you want
* `-p`: Reset - to return to the permanent MAC address, which is from the hardware itself, made by the manufacturer

**Practical Procedure**

**Initial Preparation**

The first thing we have to do is check if our `wlan0` (our Wi-Fi network) is in monitoring mode. We need to take it out of monitoring mode.

```bash
airmon-ng stop wlan0mon
```

To leave it in normal mode and view it.

**Checking the Current MAC Address**

Now let's disable our card. If you want to view it, you can see our MAC address here:

```bash
ifconfig wlan0
```

We have the manufacturer's own address, which is the permanent address. This never changes, only the "current MAC" part - then we can make the alteration to the address we want.

**Disabling the Interface**

Let's execute a `down` - we'll leave it disabled for the moment:

```bash
ifconfig wlan0 down
```

If it disappeared again from our network...

**Changing to Random MAC**

Now let's change the address to a random one. Let's use:

```bash
macchanger -r wlan0
```

It chose this address here randomly (New MAC). Then we'll have to reactivate the interface.

**Verifying the Change**

You can use the `-s` command to view:

```bash
macchanger -s wlan0
```

The address shown is the one we selected. The `-s` shows what's active.

So here's the new address, very different from what it was before.

**Reactivating the Interface**

Let's reactivate:

```bash
ifconfig wlan0 up
ifconfig
```

Final `75F`... so it was really successfully changed from what it was originally.

**Changing to Specific MAC**

Now, if you want to set a specific MAC address, you can use:

```bash
ifconfig wlan0 down
macchanger -m 00:11:22:33:90:AB wlan0
```

An address that you want.

**Checking the Result**

Look how our table turned out:
* The **permanent** will always stay the same way
* The **current** that was being used
* What we want to change, which is the `90:AB` we chose

Let's reactivate again:

```bash
ifconfig wlan0 up
ifconfig
```

Final `90:AB`... so we managed to alter it.

**Returning to Original MAC**

If you want to use our original MAC Address again, we have the reset option:

```bash
ifconfig wlan0 down
macchanger -p wlan0
```

To return to the original. As it remained here: it returned to what it was originally - we chose to return to our original MAC Address.

```bash
ifconfig wlan0 up
ifconfig
```

Return to how we were before, which is the permanent MAC address from the manufacturer itself.

**Conclusion**

So that's it, folks. This is another authentication and configuration technique that we're going to use and will also use throughout our lessons.

So these are just some basic configurations for now, so that when we apply something more advanced, we'll use all of this at once. It's going to be very important.

All right? So that's it.

Hugs to everyone!
